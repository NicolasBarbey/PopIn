<?php
/**
* This class has been generated by TheliaStudio
* For more information, see https://github.com/thelia-modules/TheliaStudio
*/

namespace PopIn\Form\Base;

use PopIn\PopIn;
use Thelia\Form\BaseForm;
use Symfony\Component\Validator\Constraints\NotBlank;

/**
 * Class PopInCampaignCreateForm
 * @package PopIn\Form\Base
 * @author TheliaStudio
 */
class PopInCampaignCreateForm extends BaseForm
{
    const FORM_NAME = "pop_in_campaign_create";

    public function buildForm()
    {
        $translationKeys = $this->getTranslationKeys();
        $fieldsIdKeys = $this->getFieldsIdKeys();

        $this->addStartField($translationKeys, $fieldsIdKeys);
        $this->addEndField($translationKeys, $fieldsIdKeys);
        $this->addContentSourceTypeField($translationKeys, $fieldsIdKeys);
        $this->addContentSourceIdField($translationKeys, $fieldsIdKeys);
    }

    protected function addStartField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder->add("start", "datetime", array(
            "label" => $this->translator->trans($this->readKey("start", $translationKeys), [], PopIn::MESSAGE_DOMAIN),
            "label_attr" => ["for" => $this->readKey("start", $fieldsIdKeys)],
            "required" => false,
            "constraints" => array(
            ),
            "attr" => array(
            )
        ));
    }

    protected function addEndField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder->add("end", "datetime", array(
            "label" => $this->translator->trans($this->readKey("end", $translationKeys), [], PopIn::MESSAGE_DOMAIN),
            "label_attr" => ["for" => $this->readKey("end", $fieldsIdKeys)],
            "required" => false,
            "constraints" => array(
            ),
            "attr" => array(
            )
        ));
    }

    protected function addContentSourceTypeField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder->add("content_source_type", "text", array(
            "label" => $this->translator->trans($this->readKey("content_source_type", $translationKeys), [], PopIn::MESSAGE_DOMAIN),
            "label_attr" => ["for" => $this->readKey("content_source_type", $fieldsIdKeys)],
            "required" => false,
            "constraints" => array(
            ),
            "attr" => array(
            )
        ));
    }

    protected function addContentSourceIdField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder->add("content_source_id", "text", array(
            "label" => $this->translator->trans($this->readKey("content_source_id", $translationKeys), [], PopIn::MESSAGE_DOMAIN),
            "label_attr" => ["for" => $this->readKey("content_source_id", $fieldsIdKeys)],
            "required" => false,
            "constraints" => array(
            ),
            "attr" => array(
            )
        ));
    }

    public function getName()
    {
        return static::FORM_NAME;
    }

    public function readKey($key, array $keys, $default = '')
    {
        if (isset($keys[$key])) {
            return $keys[$key];
        }

        return $default;
    }

    public function getTranslationKeys()
    {
        return array();
    }

    public function getFieldsIdKeys()
    {
        return array(
            "start" => "pop_in_campaign_start",
            "end" => "pop_in_campaign_end",
            "content_source_type" => "pop_in_campaign_content_source_type",
            "content_source_id" => "pop_in_campaign_content_source_id",
        );
    }
}
